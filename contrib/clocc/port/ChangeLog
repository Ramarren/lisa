2001-05-21  Sam Steingold  <sds@david.kstream.com>

	* sys.lisp (probe-directory): CLISP: drop the second value

2001-05-18  Sam Steingold  <sds@david.kstream.com>

	* sys.lisp (probe-directory): CLISP: enclose in `ignore-errors'
	 CMUCL: call `namestring' (thanks to Liam Healy)
	 generic: fixed a typo

2001-05-07  Sam Steingold  <sds@david.kstream.com>

	* gray.lisp: FUNDAMENTAL-STREAM is defined in PCL, while
	 FUNDAMENTAL-INPUT-STREAM is defined in GRAY (thanks to Raymond Toy)

	* gray.lisp: load CMUCL "gray-streams-library" when
	 EXT:FUNDAMENTAL-STREAM does not name a class

2001-04-25  Sam Steingold  <sds@david.kstream.com>

	* shell.lisp (run-prog):
	in CLISP/lisp=cl, `ext:run-program' accepts :wait

	* shell.lisp (run-prog): quote arguments passed to shell via format

2001-04-11  Sam Steingold  <sds@david.kstream.com>

	* shell.lisp, sys.lisp, ext.lisp, gray.lisp, net.lisp:
	updated for CLISP #+LISP=CL

2001-04-03  Sam Steingold  <sds@david.kstream.com>

	* ext.lisp (code, case-error, not-implemented): added :documentation

2001-03-21  Sam Steingold  <sds@david.kstream.com>

	* sys.lisp (rmdir): LispWorks: check whether
	 `lw:delete-directory' is `fboundp'

2001-03-19  Sam Steingold  <sds@david.kstream.com>

	* sys.lisp: removed the last patch

2001-03-17  liam  <liam@david.kstream.com>

	* sys.lisp:
	Removed LispWorks from rmdir; function lw:delete-directory is not
	defined.  Export mkdir, rmdir.

2001-03-17  Sam Steingold  <sds@david.kstream.com>

	* net.lisp (socket-accept): ACL5 cannot change socket format

2001-03-13  Sam Steingold  <sds@david.kstream.com>

	* sys.lisp (mkdir): fixed arg name

	* ext.lisp (required-argument): export on non-CMUCL platforms

2001-03-07  Sam Steingold  <sds@david.kstream.com>

	* sys.lisp (probe-directory):
	fixed for LispWorks (thanks to David E. Young)
	(mkdir, rmdir): new functions

2001-02-23  Sam Steingold  <sds@david.kstream.com>

	* ext.lisp (required-argument): fix import/export for CMUCL

2001-02-07  Sam Steingold  <sds@david.kstream.com>

	* ext.lisp (string-tokens): when `max' is nil,
	 use `read-from-string' on the whole string

2001-02-06  Sam Steingold  <sds@david.kstream.com>

	* ext.lisp (defpackage "PORT"): use string!

	* ext.lisp (defpackage port): use strings instead of symbols

2001-01-23  Sam Steingold  <sds@david.kstream.com>

	* net.lisp (socket-host/port): lispworks: use
	 `comm:socket-stream-address' instead of the non-existant
	 `comm:socket-stream-local-address'

2001-01-08  Sam Steingold  <sds@david.kstream.com>

	* ext.lisp: updated the (C) statement

	* ext.lisp (required-argument): new function (from CMUCL)

2000-12-03  Sam Steingold  <sds@david.kstream.com>

	* net.lisp: require :sys because of `getenv'

2000-11-16  Sam Steingold  <sds@david.kstream.com>

	* net.lisp: Allegro uses feature :mswindows, not :win32

	* sys.lisp (sysinfo): ported to the Allegro/win32 registry interface

2000-11-15  Sam Steingold  <sds@david.kstream.com>

	* sys.lisp (class-slot-*, variable-special-p): works with ACL6 now

	* net.lisp (socket-accept): ignore `bin' in ACL6

2000-11-13  Sam Steingold  <sds@david.kstream.com>

	* net.lisp (socket-accept): in ALC6 all sockets are bivalent

2000-11-10  Sam Steingold  <sds@david.kstream.com>

	* shell.lisp (run-prog): wait defaults to T;
	it now works on LispWorks and CLISP/UNIX too

2000-09-04  Sam Steingold  <sds@david.kstream.com>

	* shell.lisp (run-prog): CMUCL: forgot #'

2000-08-19  Sam Steingold  <sds@david.kstream.com>

	* sys.lisp (slot-one-initarg): do not use slot-name

2000-08-14  Sam Steingold  <sds@david.kstream.com>

	* sys.lisp (class-slot-initargs):
	do not take `car' of `slot-one-initarg'

	* sys.lisp (class-slot-initargs): new function; export it

2000-08-07  Sam Steingold  <sds@david.kstream.com>

	* sys.lisp (class-slot-list): accept anything as the first arg,
	not just a struct or a CLOS class instance

2000-07-31  Sam Steingold  <sds@david.kstream.com>

	* sys.lisp (variable-special-p, arglist, class-slot-list):
	support Lucid

	* ext.lisp (gc, quit): support Lucid

	* shell.lisp (run-prog, pipe-output, pipe-input): support Lucid

	* proc.lisp (with-lock): support Lucid

2000-07-20  Sam Steingold  <sds@david.kstream.com>

	* net.lisp (open-socket-server): CMUCL: use 0 when port is nil
	(socket-server-host/port): CMUCL: use `ext:get-socket-host-and-port'

2000-05-31  Sam Steingold  <sds@david.kstream.com>

	* sys.lisp (pathname-ensure-name): new function

2000-05-23  Sam Steingold  <sds@david.kstream.com>

	* net.lisp (socket-string): use `print-unreadable-object'

2000-05-22  Sam Steingold  <sds@david.kstream.com>

	* net.lisp (socket-string): typo

	* net.lisp (host/port-string, socket-server-string): removed
	(socket-string): print both local and peer

	* sys.lisp (finalize): new function
	(arglist): support CormanLisp

2000-05-18  Sam Steingold  <sds@david.kstream.com>

	* net.lisp (host/port-string): new function, "0.0.0.0"->"127.0.0.1"
	(socket-string, socket-server-string): use it

2000-05-15  Sam Steingold  <sds@david.kstream.com>

	* net.lisp (socket-accept): CLISP: fixed for null wait

	* proc.lisp (with-lock): ignore `lock' when no threads

2000-05-12  Sam Steingold  <sds@david.kstream.com>

	* proc.lisp (with-timeout): added missing commas

	* ext.lisp (defconst): drop `eval-when'

2000-05-09  Sam Steingold  <sds@david.kstream.com>

	* net.lisp (socket-host/port): return both remote and local host&port

	* sys.lisp (class-slot-list): added the argument to `not-implemented'

	* ext.lisp (code): `proc' is not necessarily a symbol

2000-05-08  Sam Steingold  <sds@david.kstream.com>

	* net.lisp (socket-host/port):
	CLISP: use lisp:socket-stream-peer (thanks Don)

2000-05-02  Sam Steingold  <sds@david.kstream.com>

	* net.lisp: export `hostent' and `servent' accessors

2000-05-01  Sam Steingold  <sds@david.kstream.com>

	* net.lisp: fixed values declaration

2000-04-27  Sam Steingold  <sds@david.kstream.com>

	* net.lisp (socket-accept):
	`bin' is now a keyword; new keyword arg `wait'

2000-04-19  Sam Steingold  <sds@david.kstream.com>

	* proc.lisp: support CormanLisp

	* net.lisp (resolve-host-ipaddr): fixed for LispWorks
	(defstruct socket-server): added slot `port'
	(socket-server-host/port): replaces `socket-server-host'
	and `socket-server-port'

	* sys.lisp (variable-special-p): fixed for LispWorks
	(class-slot-list, chdir, default-directory): support CormanLisp

	* ext.lisp (gc): support CormanLisp
	(quit): support CormanLisp and LispWorks

2000-04-10  Sam Steingold  <sds@david.kstream.com>

	* sys.lisp (arglist): support LispWorks

	* net.lisp (socket-host/port): replaces `socket-host' and `socket-port'
	(resolve-host-ipaddr): fixed for GCL and LispWorks
	(socket-string): print socket as host:port
	(socket-server &c): support LispWorks

	* shell.lisp (run-prog): support Liquid
	(pipe-output, pipe-input): fixed for LispWorks

2000-04-07  Sam Steingold  <sds@david.kstream.com>

	* sys.lisp: use abbreviated package names consistently

2000-04-06  Sam Steingold  <sds@david.kstream.com>

	* proc.lisp (giveup-lock): support CMUCL

2000-04-05  Sam Steingold  <sds@david.kstream.com>

	* gray.lisp: support LispWorks

	* proc.lisp:
	Thanks John Wiseman.  More work is needed for Genera&Lucid.
	(process-yield): new fuctions
	(make-lock, get-lock, giveup-lock): new functions
	(with-lock): new macro

	* sys.lisp (variable-special-p): support lispworks

2000-04-04  Sam Steingold  <sds@david.kstream.com>

	* net.lisp (socket-server-host): fixed for CMUCL

2000-04-03  Sam Steingold  <sds@david.kstream.com>

	* net.lisp (socket-accept): allegro: use `bin'

	* sys.lisp (arglist, chdir): allegro has EXCL, not EXT

	* proc.lisp (with-timeout): fixed call to `with-gensyms'

2000-03-30  Sam Steingold  <sds@david.kstream.com>

	* ext.lisp (eof-p): new function

2000-03-29  Sam Steingold  <sds@david.kstream.com>

	* net.lisp:
	cannot use `call-next-method' in `define-condition' :report.
	(report-network-condition): new function
	(network, timeout): use it

2000-03-28  Sam Steingold  <sds@david.kstream.com>

	* net.lisp (servent): new defstruct
	(socket-service-port): return it

	* net.lisp (resolve-host-ipaddr): in clisp, it's `addrtype'

2000-03-24  Sam Steingold  <sds@david.kstream.com>

	* shell.lisp: comment

2000-03-23  Sam Steingold  <sds@david.kstream.com>

	* sys.lisp (+whitespace+): moved to cllib/withtype

2000-03-22  Sam Steingold  <sds@david.kstream.com>

	* shell.lisp, sys.lisp: use package prefixes for CMU CL and GCL

	* ext.lisp (quit): optional error code argument

2000-03-09  Sam Steingold  <sds@david.kstream.com>

	* gray.lisp: Gray streams unification

2000-03-08  Sam Steingold  <sds@david.kstream.com>

	* net.lisp (socket-server-host, socket-server-port): exported

2000-03-07  Sam Steingold  <sds@david.kstream.com>

	* net.lisp (socket-server-host, socket-server-port): new functions
	(socket-host, socket-accept): fixed for CMUCL

2000-03-03  Sam Steingold  <sds@david.kstream.com>

	* ext.lisp, net.lisp, proc.lisp, shell.lisp, sys.lisp:
	fixed provide statements

2000-03-01  Sam Steingold  <sds@david.kstream.com>

	* sys.lisp (arglist, class-slot-list): new functions

	* sys.lisp (variable-special-p): new function

2000-02-18  Sam Steingold  <sds@david.kstream.com>

	* ext.lisp, net.lisp, proc.lisp, shell.lisp, sys.lisp:
	in-package :port now; make system works

2000-02-10  Sam Steingold  <sds@david.kstream.com>

	* net.lisp (hostent): new defstruct
	(resolve-host-ipaddr): return a `hostent' instance
	instead of multiple values.

	* ext.lisp (+eof+): new constant (for `string-tokens')
	(string-tokens): new function (for net)

1999-11-24  Sam Steingold  <sds@david.kstream.com>

	* ext.lisp, net.lisp, shell.lisp, sys.lisp:
	Cross-implementation Portability System

