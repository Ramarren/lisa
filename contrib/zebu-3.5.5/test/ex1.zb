; -*- mode:     CL -*- ----------------------------------------------------- ;
; File:         ex1.zb
; Description:  Grammar 4.19 from Dragon, p. 222
; Author:       Joachim H. Laubsch
; Created:       8-Apr-92
; Modified:     Thu Oct  2 12:51:48 1997 (Joachim H. Laubsch)
; Language:     CL
; Package:      CL-USER
; Status:       Experimental (Do Not Distribute) 
; RCS $Header: /home/ramarren/LISP/git-repos/lisa-tmp/lisa/contrib/zebu-3.5.5/test/Attic/ex1.zb,v 1.1 2000/10/12 02:39:45 youngde Exp $
;
; (c) Copyright 1992, Hewlett-Packard Company
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Revisions:
; RCS $Log: ex1.zb,v $
; RCS Revision 1.1  2000/10/12 02:39:45  youngde
; RCS Added Zebu as contrib; initial class files; initial grammar
; RCS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(:name "ex1" 
 :domain-file "ex1-dom"
 :package "CL-USER"
 :grammar "null-grammar"
 :lex-cats ((Ratio_Number "-?[0-9]+/[0-9]+")
	    (Simple_Float "-?[0-9]*\\.[0-9]+"))
 )

(defrule EE
 := ( EE "+" TT )
 :build (:form (LIST '+op EE TT))
 := TT
 :build (:form (LIST 'expression TT)))

(defrule  TT 
  := (TT "*" F)
  :build (:form (LIST '*-op TT F))

  := F
  :build (:form (LIST 'term F)) )

(defrule F 
  := ( "(" EE ")" )
  :build (:form (LIST 'factor EE))
  
  := IDENTIFIER
  :build (:form (list 'factor IDENTIFIER)) 

  := Numeric
  :build (:form (list 'factor Numeric)) )

(defrule Numeric
    := NUMBER
    := Ratio_Number
    :build (:form (read-from-string Ratio_Number))
    := Simple_Float
    :build (:form (read-from-string Simple_Float)))
  
#||
(set-working-directory *ZEBU-test-directory*)
(zb:compile-slr-grammar "ex1.zb" :output-file "binary/ex1.tab")

(zb:zebu-load-file "binary/ex1.tab")
(zb::print-collection nil)
(zb::print-collection t)

(zb:read-parser "b" :grammar (zb:find-grammar "ex1"))
(zb:read-parser "1" :grammar (zb:find-grammar "ex1"))
(zb:read-parser "1/2" :grammar (zb:find-grammar "ex1"))
(zb:read-parser "1.2" :grammar (zb:find-grammar "ex1"))
(zb:read-parser "(1)" :grammar (zb:find-grammar "ex1"))
(zb:read-parser "-1.2" :grammar (zb:find-grammar "ex1"))

(zb:read-parser "(b + a)" :grammar (zb:find-grammar "ex1"))
(zb:read-parser "(1 + a)" :grammar (zb:find-grammar "ex1"))

(zb::cruise-first-sets)
||#

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;                                End of ex1.zb
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
